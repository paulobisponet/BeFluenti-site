/**
 * Befluent Chatbot - Sistema de Chat Educacional
 * Simula um assistente virtual com respostas inteligentes
 */

'use strict';

// ===== CONFIGURA√á√ïES DO CHATBOT =====
const CONFIG = {
    typingDelay: 1500,
    maxMessageLength: 500,
    storageKey: 'befluent_chat_history'
};

// ===== BASE DE CONHECIMENTO =====
const KNOWLEDGE_BASE = {
    // Sauda√ß√µes
    greetings: {
        keywords: ['oi', 'ol√°', 'hello', 'boa tarde', 'bom dia', 'boa noite', 'hey'],
        responses: [
            'Ol√°! üëã Seja bem-vindo(a) ao suporte da Befluent! Como posso ajudar voc√™ hoje?',
            'Oi! üòä Sou o assistente virtual da Befluent. Em que posso ser √∫til?',
            'Ol√°! Fico feliz em falar com voc√™. Qual sua d√∫vida sobre a plataforma Befluent?'
        ]
    },

    // Login e Acesso
    login: {
        keywords: ['login', 'entrar', 'acesso', 'senha', 'usu√°rio', 'cadastro'],
        responses: [
            'üîê Para fazer login na sua turma:\n\n1. Voc√™ deve ter recebido um link de acesso por e-mail ou WhatsApp\n2. Clique no link ou digite o endere√ßo no navegador\n3. Use suas credenciais fornecidas pelos professores\n\nSe n√£o recebeu o acesso, entre em contato: (81) 99469-2570'
        ]
    },

    // Downloads
    downloads: {
        keywords: ['download', 'baixar', 'app', 'aplicativo', 'quiz', 'celular', 'android'],
        responses: [
            'üì± Para baixar nossos aplicativos educativos:\n\n1. Visite nossa p√°gina de Downloads no site\n2. Escolha o app da sua disciplina\n3. Clique em "Download"\n\nüéØ Apps dispon√≠veis:\n‚Ä¢ Quiz de Portugu√™s\n‚Ä¢ Quiz de Matem√°tica\n‚Ä¢ Quiz de Ingl√™s\n‚Ä¢ Quiz de Hist√≥ria\n‚Ä¢ Quiz de Ci√™ncias\n\nüìã Em breve na Play Store!'
        ]
    },

    // Estudos e Provas
    studies: {
        keywords: ['prova', 'estudar', 'mat√©ria', 'conte√∫do', 'o que vai cair', 'disciplina'],
        responses: [
            'üìö Para saber o que vai cair na prova:\n\n1. Consulte o cronograma da sua turma\n2. Verifique os materiais disponibilizados\n3. Use nossos quizzes para revisar\n4. Pergunte diretamente aos professores\n\nüí° Dica: Pratique com nossos apps de quiz para fixar o conte√∫do!'
        ]
    },

    // Dicas de Estudo
    studyTips: {
        keywords: ['como estudar', 'dicas', 'aprender melhor', 'm√©todo', 'concentra√ß√£o'],
        responses: [
            'üß† Dicas para estudar melhor:\n\n‚úÖ Crie uma rotina de estudos\n‚úÖ Use t√©cnicas como mapas mentais\n‚úÖ Fa√ßa pausas regulares (T√©cnica Pomodoro)\n‚úÖ Pratique com nossos quizzes\n‚úÖ Estude em ambiente silencioso\n‚úÖ Revise o conte√∫do regularmente\n\nCom nossa forma√ß√£o em Neuropsicopedagogia, sabemos que cada pessoa aprende de forma √∫nica! üéØ'
        ]
    },

    // Contato e Professores
    contact: {
        keywords: ['contato', 'professores', 'paulo', 'm√¥nica', 'falar', 'atendimento'],
        responses: [
            'üë®‚Äçüè´üë©‚Äçüè´ Contato com Paulo e M√¥nica Bispo:\n\nüìß E-mail: atendimentobefluent@gmail.com\nüì± WhatsApp: (81) 99469-2570\nüïê Hor√°rio: Segunda a sexta, 8h √†s 18h\n\nEles respondem pessoalmente e adoram ajudar os alunos! üòä'
        ]
    },

    // Hor√°rios
    schedule: {
        keywords: ['hor√°rio', 'atendimento', 'quando', 'funciona', 'dispon√≠vel'],
        responses: [
            'üïê Hor√°rios de Atendimento:\n\nüìÖ Segunda a sexta-feira\n‚è∞ Das 08:00 √†s 18:00\nüì± Suporte via WhatsApp e e-mail\nü§ñ Este chat est√° dispon√≠vel 24h!\n\nEm hor√°rios especiais, respondemos em at√© 24 horas. ‚ö°'
        ]
    },

    // Suporte T√©cnico
    techSupport: {
        keywords: ['problema', 'erro', 'n√£o funciona', 'bug', 'travou', 'suporte t√©cnico'],
        responses: [
            'üîß Problemas t√©cnicos?\n\n1. Tente atualizar a p√°gina (F5)\n2. Limpe o cache do navegador\n3. Verifique sua conex√£o\n4. Teste em outro navegador\n\nSe persistir:\nüìß atendimentobefluent@gmail.com\nüì± (81) 99469-2570\n\nDescreva o problema detalhadamente! üîç'
        ]
    },

    // Sobre a Befluent
    about: {
        keywords: ['befluent', 'plataforma', 'sobre', 'quem', 'hist√≥ria', 'miss√£o'],
        responses: [
            'üí´ Sobre a Befluent:\n\n"Educar com amor, aprender com prop√≥sito"\n\nüë´ Criada por Paulo e M√¥nica Bispo\nüéì +25 anos de experi√™ncia educacional\nüìö Forma√ß√£o em Pedagogia e Letras\nüß† Especialistas em Neuropsicopedagogia\n‚ù§Ô∏è Casados desde 2001\n\nNossa miss√£o √© transformar vidas atrav√©s da educa√ß√£o afetiva! ‚ú®'
        ]
    },

    // Agradecimentos
    thanks: {
        keywords: ['obrigado', 'obrigada', 'valeu', 'thanks', 'agrade√ßo'],
        responses: [
            'Fico feliz em ter ajudado! üòä Se precisar de mais alguma coisa, estarei aqui!',
            'Por nada! üåü Lembre-se: estamos sempre aqui para apoiar seu aprendizado!',
            'Foi um prazer ajudar! üíô Bons estudos e conte conosco sempre!'
        ]
    },

    // Despedidas
    goodbye: {
        keywords: ['tchau', 'bye', 'at√© logo', 'fui', 'falou'],
        responses: [
            'At√© logo! üëã Bons estudos e muito sucesso na sua jornada educacional!',
            'Tchau! üåü Lembre-se: a Befluent est√° sempre aqui para voc√™!',
            'At√© mais! üíô Que seus estudos sejam produtivos e prazerosos!'
        ]
    }
};

// ===== RESPOSTAS PADR√ÉO =====
const DEFAULT_RESPONSES = [
    'ü§î Hmm, n√£o tenho certeza sobre isso. Mas posso te conectar com nossos professores!\n\nüì± WhatsApp: (81) 99469-2570\nüìß E-mail: atendimentobefluent@gmail.com',
    'üí° Essa √© uma √≥tima pergunta! Para uma resposta mais precisa, recomendo falar diretamente com Paulo e M√¥nica:\n\nüìû (81) 99469-2570\n‚úâÔ∏è atendimentobefluent@gmail.com',
    'üéØ N√£o encontrei uma resposta espec√≠fica, mas nossos educadores Paulo e M√¥nica podem ajudar melhor:\n\nüí¨ WhatsApp: (81) 99469-2570\nüìÆ atendimentobefluent@gmail.com'
];

// ===== VARI√ÅVEIS GLOBAIS =====
let messageHistory = [];
let isTyping = false;

// ===== INICIALIZA√á√ÉO =====
document.addEventListener('DOMContentLoaded', function() {
    loadChatHistory();
    initializeEventListeners();
    focusInput();
});

// ===== EVENT LISTENERS =====
function initializeEventListeners() {
    const messageInput = document.getElementById('messageInput');
    
    // Auto-resize input e contagem de caracteres
    messageInput.addEventListener('input', function() {
        // Limitar caracteres
        if (this.value.length > CONFIG.maxMessageLength) {
            this.value = this.value.substring(0, CONFIG.maxMessageLength);
        }
    });

    // Enter para enviar
    messageInput.addEventListener('keydown', function(e) {
        if (e.key === 'Enter' && !e.shiftKey) {
            e.preventDefault();
            sendMessage(e);
        }
    });
}

// ===== ENVIO DE MENSAGENS =====
function sendMessage(event) {
    event.preventDefault();
    
    const messageInput = document.getElementById('messageInput');
    const message = messageInput.value.trim();
    
    if (!message || isTyping) return;
    
    // Adicionar mensagem do usu√°rio
    addMessage(message, 'user');
    messageInput.value = '';
    
    // Salvar no hist√≥rico
    messageHistory.push({ type: 'user', content: message, timestamp: new Date().toISOString() });
    
    // Processar resposta do bot
    setTimeout(() => {
        const botResponse = generateBotResponse(message);
        showTypingIndicator();
        
        setTimeout(() => {
            hideTypingIndicator();
            addMessage(botResponse, 'bot');
            messageHistory.push({ type: 'bot', content: botResponse, timestamp: new Date().toISOString() });
            saveChatHistory();
        }, CONFIG.typingDelay);
    }, 500);
}

function sendQuickMessage(message) {
    const messageInput = document.getElementById('messageInput');
    messageInput.value = message;
    
    // Simular envio
    const event = new Event('submit');
    sendMessage(event);
}

// ===== GERA√á√ÉO DE RESPOSTAS =====
function generateBotResponse(userMessage) {
    const message = userMessage.toLowerCase();
    
    // Verificar cada categoria da base de conhecimento
    for (const [category, data] of Object.entries(KNOWLEDGE_BASE)) {
        for (const keyword of data.keywords) {
            if (message.includes(keyword)) {
                return getRandomResponse(data.responses);
            }
        }
    }
    
    // Resposta padr√£o se n√£o encontrar correspond√™ncia
    return getRandomResponse(DEFAULT_RESPONSES);
}

function getRandomResponse(responses) {
    return responses[Math.floor(Math.random() * responses.length)];
}

// ===== INTERFACE DO CHAT =====
function addMessage(content, type) {
    const chatMessages = document.getElementById('chatMessages');
    const messageDiv = document.createElement('div');
    messageDiv.className = `message ${type}-message`;
    
    const avatar = document.createElement('div');
    avatar.className = 'message-avatar';
    avatar.innerHTML = type === 'bot' ? '<i class="fas fa-robot"></i>' : '<i class="fas fa-user"></i>';
    
    const messageContent = document.createElement('div');
    messageContent.className = 'message-content';
    
    const messageBubble = document.createElement('div');
    messageBubble.className = 'message-bubble';
    
    // Processar quebras de linha e formata√ß√£o
    const formattedContent = formatMessageContent(content);
    messageBubble.innerHTML = formattedContent;
    
    const messageTime = document.createElement('span');
    messageTime.className = 'message-time';
    messageTime.textContent = formatTime(new Date());
    
    messageContent.appendChild(messageBubble);
    messageContent.appendChild(messageTime);
    messageDiv.appendChild(avatar);
    messageDiv.appendChild(messageContent);
    
    chatMessages.appendChild(messageDiv);
    scrollToBottom();
}

function formatMessageContent(content) {
    return content
        .replace(/\n/g, '<br>')
        .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
        .replace(/\*(.*?)\*/g, '<em>$1</em>');
}

function formatTime(date) {
    return date.toLocaleTimeString('pt-BR', { 
        hour: '2-digit', 
        minute: '2-digit' 
    });
}

function scrollToBottom() {
    const chatMessages = document.getElementById('chatMessages');
    chatMessages.scrollTop = chatMessages.scrollHeight;
}

function focusInput() {
    const messageInput = document.getElementById('messageInput');
    messageInput.focus();
}

// ===== INDICADOR DE DIGITA√á√ÉO =====
function showTypingIndicator() {
    isTyping = true;
    const typingIndicator = document.getElementById('typingIndicator');
    typingIndicator.style.display = 'flex';
    
    // Desabilitar bot√£o de envio
    const sendBtn = document.querySelector('.send-btn');
    sendBtn.disabled = true;
}

function hideTypingIndicator() {
    isTyping = false;
    const typingIndicator = document.getElementById('typingIndicator');
    typingIndicator.style.display = 'none';
    
    // Reabilitar bot√£o de envio
    const sendBtn = document.querySelector('.send-btn');
    sendBtn.disabled = false;
    
    focusInput();
}

// ===== GERENCIAMENTO DE HIST√ìRICO =====
function saveChatHistory() {
    try {
        // Manter apenas as √∫ltimas 50 mensagens para n√£o sobrecarregar o storage
        const recentHistory = messageHistory.slice(-50);
        const historyData = {
            messages: recentHistory,
            lastSaved: new Date().toISOString()
        };
        
        // Como n√£o podemos usar localStorage, vamos apenas manter em mem√≥ria
        // Em uma implementa√ß√£o real, isso seria enviado para um servidor
        console.log('Chat history would be saved:', historyData);
        
    } catch (error) {
        console.warn('Erro ao salvar hist√≥rico do chat:', error);
    }
}

function loadChatHistory() {
    try {
        // Em uma implementa√ß√£o real, isso carregaria do servidor
        // Por ora, come√ßamos com hist√≥rico vazio
        messageHistory = [];
        
    } catch (error) {
        console.warn('Erro ao carregar hist√≥rico do chat:', error);
        messageHistory = [];
    }
}

function clearChat() {
    if (confirm('Tem certeza que deseja limpar toda a conversa?')) {
        const chatMessages = document.getElementById('chatMessages');
        
        // Manter apenas a mensagem de boas-vindas
        const welcomeMessage = chatMessages.querySelector('.bot-message');
        chatMessages.innerHTML = '';
        if (welcomeMessage) {
            chatMessages.appendChild(welcomeMessage);
        }
        
        // Limpar hist√≥rico
        messageHistory = [];
        
        // Mostrar mensagem de confirma√ß√£o
        setTimeout(() => {
            addMessage('Conversa limpa! Como posso ajudar voc√™ agora? üòä', 'bot');
        }, 500);
    }
}

// ===== UTILIT√ÅRIOS =====
function handleError(error, userMessage = 'Ops! Algo deu errado.') {
    console.error('Chatbot Error:', error);
    
    if (isTyping) {
        hideTypingIndicator();
    }
    
    addMessage(
        'üòÖ Ops! Tive um pequeno problema t√©cnico. Mas n√£o se preocupe!\n\n' +
        'Entre em contato direto com nossos professores:\n' +
        'üì± (81) 99469-2570\n' +
        'üìß atendimentobefluent@gmail.com', 
        'bot'
    );
}

// ===== RECURSOS ESPECIAIS =====
function handleSpecialCommands(message) {
    const commands = {
        '/help': () => {
            return 'üÜò Comandos dispon√≠veis:\n\n' +
                   '‚Ä¢ Digite suas d√∫vidas naturalmente\n' +
                   '‚Ä¢ Use os bot√µes de perguntas frequentes\n' +
                   '‚Ä¢ /clear - Limpar conversa\n' +
                   '‚Ä¢ /contact - Informa√ß√µes de contato\n\n' +
                   'Estou aqui para ajudar! üòä';
        },
        '/clear': () => {
            clearChat();
            return null;
        },
        '/contact': () => {
            return KNOWLEDGE_BASE.contact.responses[0];
        }
    };
    
    const command = message.toLowerCase().trim();
    if (commands[command]) {
        return commands[command]();
    }
    
    return null;
}

// ===== ANALYTICS E FEEDBACK =====
function trackInteraction(type, content) {
    // Em uma implementa√ß√£o real, isso enviaria dados para analytics
    const interaction = {
        type: type,
        content: content,
        timestamp: new Date().toISOString(),
        sessionId: 'chat_session_' + Date.now()
    };
    
    console.log('Interaction tracked:', interaction);
}

// ===== EXPORTAR FUNC√ïES GLOBAIS =====
window.sendMessage = sendMessage;
window.sendQuickMessage = sendQuickMessage;
window.clearChat = clearChat;
